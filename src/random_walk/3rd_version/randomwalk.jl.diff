--- ../2nd_version/randomwalk.jl	2014-09-26 19:02:29.000000000 +0900
+++ randomwalk.jl	2014-09-26 19:00:20.000000000 +0900
@@ -1,3 +1,14 @@
+using NumericExtensions, NumericFuns
+
+type UpdateFunctor <: UnaryFunctor
+  p :: Float64
+  UpdateFunctor(p::Float64=0.5) = new(p)
+end
+
+NumericExtensions.evaluate(uf::UpdateFunctor, x::Int) = update(x, uf.p)
+NumericExtensions.result_type(::UpdateFunctor, ::Type{Int64}) = Int64
+
+
 update(x::Int, p::Float64=0.5) = rand()<p? x+1 : x-1
 
 function randomwalk(p::Float64 = 0.5, N::Int = 1000, tmax::Int = 100)
@@ -6,7 +17,7 @@
   xs = zeros(Int, N)
 
   for t in 1:tmax
-    map!(x->update(x,p), xs)
+    xs = map(UpdateFunctor(p), xs)
     means[t+1] = mean(xs)
     vars[t+1] = var(xs)
   end
